import { UserAccountEntity } from '../../user-account/entities/user-account.entity';
import { Entity, Column, ManyToMany, JoinTable } from 'typeorm';

/**
 * An entity class for item_category table in the database.
 */
@Entity('role')
export class RoleEntity {
	/**
	 * PK of the table.
	 */
	@Column({
		name: 'role_id',
		type: 'smallint',
		comment: 'PK of the table.',
		generated: 'increment',
		primary: true,
		nullable: false,
		unique: true
	})
	roleId: number;

	/**
	 * Name of the role.
	 */
	@Column({
		name: 'role_name',
		type: 'varchar',
		length: 50,
		comment: 'Name of the role.',
		nullable: false
	})
	roleName: string;

	/**
	 * User id of a user who created the record.
	 */
	@Column({
		name: 'createdby',
		type: 'int',
		comment: 'User id of a user who created the record.',
		nullable: false
	})
	createdBy: number;

	/**
	 * Date and time when the record is created.
	 */
	@Column({
		name: 'createddate',
		type: 'timestamp',
		comment: 'Date and time when the record is created.',
		nullable: false
	})
	createdDate: Date;

	/**
	 * User id of a user who modified the record.
	 */
	@Column({
		name: 'modifiedby',
		type: 'int',
		comment: 'User id of a user who modified the record.',
		nullable: true
	})
	modifiedBy: number;

	/**
	 * Date and time when the record is modified.
	 */
	@Column({
		name: 'modifieddate',
		type: 'timestamp',
		comment: 'Date and time when the record is modified.',
		nullable: true
	})
	modifiedDate: Date;

	/**
	 * Is generated by the system.
	 */
	@Column({
		name: 'issystem',
		type: 'boolean',
		comment: 'Is generated by the system.',
		nullable: false
	})
	isSystem: boolean;

	/**
	 * Is default.
	 */
	@Column({
		name: 'isDefault',
		type: 'boolean',
		comment: 'Is default role or not.',
		nullable: true,
		default: false
	})
	isDefault: boolean;

	@ManyToMany(() => UserAccountEntity, user => user.roles)
	@JoinTable({
		name: 'user_role',
		joinColumn: {
			name: 'role_id',
			referencedColumnName: 'roleId'
		},
		inverseJoinColumn: {
			name: 'user_id',
			referencedColumnName: 'userId'
		}
	})
	users: UserAccountEntity[];
}
